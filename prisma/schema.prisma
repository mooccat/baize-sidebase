// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  // NOTE: You probably want to change this to another database later on
  provider = "postgresql"

  // This value is read from the .env file.
  url = env("DATABASE_URL")
}

model Example {
  id      String @id @default(uuid())
  details String
}

model Template {
  id          String    @id @default(uuid())
  name        String
  description String
  key         String    @unique
  prompt      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  Category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  ChatLog     ChatLog[]
}

model Category {
  id          String     @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
  templates   Template[]
}

model ChatLog {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?
  Template    Template?     @relation(fields: [templateId], references: [id])
  templateId  String?
  User        User?         @relation(fields: [userId], references: [id])
  userId      String?
  ChatMessage ChatMessage[]
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  ChatLog   ChatLog[]
}

model ChatMessage {
  id                String    @id @default(uuid())
  role              String
  content           String
  prompt_tokens     Int       @default(0)
  completion_tokens Int       @default(0)
  total_tokens      Int       @default(0)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?
  ChatLog           ChatLog?  @relation(fields: [chatLogId], references: [id])
  chatLogId         String?
}
